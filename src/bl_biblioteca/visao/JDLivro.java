/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package bl_biblioteca.visao;

import bl_biblioteca.controle.ConectaBanco;
import bl_biblioteca.controle.ControleLivro;
import bl_biblioteca.controle.ControleJtextFieldStrings;
import bl_biblioteca.modelo.ModeloLivro;
import bl_biblioteca.modelo.ModeloTabela;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

public class JDLivro extends javax.swing.JDialog {

    ConectaBanco conecta = new ConectaBanco();
    ConectaBanco conectaLivro = new ConectaBanco();
    ConectaBanco conectaEditora = new ConectaBanco();
    ConectaBanco conectaArea = new ConectaBanco();
    ConectaBanco conectaAutor = new ConectaBanco();
    ModeloLivro mod = new ModeloLivro();
    ControleLivro controlLivro = new ControleLivro();
    String registro = "0";

    public JDLivro(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        conecta.conexao();
        conectaLivro.conexao();
        conectaEditora.conexao();
        conectaArea.conexao();
        conectaAutor.conexao();
        jComboBoxArea.removeAllItems();
        jComboBoxAutor.removeAllItems();
        jComboBoxEditora.removeAllItems();
        atualizaCombobox();
        preencherTabela("SELECT livro.registro as registro, livro.titulo as titulo,autor.nome as autor,editora.nome as editora, livro.serie as serie, area.nome as area, livro.volume, livro.ano_publicacao as publicacao \n"
                + "FROM single.livro as livro\n"
                + "inner  join single.area as area\n"
                + "on area.codigo = livro.area\n"
                + "inner join single.editora as editora\n"
                + "on editora.codigo = livro.editora\n"
                + "inner join single.autor as autor\n"
                + "on autor.codigo = livro.autor\n"
                + "order by livro.registro");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLivro = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldTitulo = new ControleJtextFieldStrings(50);
        jLabel6 = new javax.swing.JLabel();
        jTextFieldSerie = new ControleJtextFieldStrings(50);
        jLabel9 = new javax.swing.JLabel();
        jComboBoxArea = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldVolume = new bl_biblioteca.controle.ControleJtextFieldNumeros(4);
        jLabel11 = new javax.swing.JLabel();
        jComboBoxAutor = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jComboBoxEditora = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jYearChooserPublicacao = new com.toedter.calendar.JYearChooser();
        jButtonExcluir = new javax.swing.JButton();
        jButtonAlterar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonNovo = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de livros");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setName(""); // NOI18N

        jTableLivro.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTableLivro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableLivro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLivroMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableLivro);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Título: ");

        jTextFieldTitulo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldTitulo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldTitulo.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Série:");

        jTextFieldSerie.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldSerie.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldSerie.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Área:");

        jComboBoxArea.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBoxArea.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Volume:");

        jTextFieldVolume.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldVolume.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldVolume.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Autor:");

        jComboBoxAutor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBoxAutor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Editora:");

        jComboBoxEditora.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBoxEditora.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Publicação:");

        jYearChooserPublicacao.setEnabled(false);

        jButtonExcluir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonExcluir.setText("Excluir");
        jButtonExcluir.setToolTipText("Excluir local");
        jButtonExcluir.setEnabled(false);
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonAlterar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonAlterar.setText("Alterar");
        jButtonAlterar.setToolTipText("Alterar local");
        jButtonAlterar.setEnabled(false);
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });

        jButtonCancelar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.setEnabled(false);
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonNovo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonNovo.setText("Novo");
        jButtonNovo.setToolTipText("Novo Local");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jButtonSalvar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonSalvar.setText("Salvar");
        jButtonSalvar.setToolTipText("Salvar local");
        jButtonSalvar.setEnabled(false);
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jLabel1.setText("*");

        jLabel3.setText("*");

        jLabel4.setText("*");

        jLabel8.setText("*");

        jLabel10.setText("*");

        jLabel13.setText("*");

        jLabel15.setText("* Campos obrigatórios");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(jButtonExcluir)
                                            .addGap(31, 31, 31)
                                            .addComponent(jButtonAlterar)
                                            .addGap(28, 28, 28)
                                            .addComponent(jButtonCancelar)
                                            .addGap(23, 23, 23)
                                            .addComponent(jButtonNovo))
                                        .addComponent(jLabel7))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jTextFieldVolume, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel11))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel12)))
                                .addGap(22, 22, 22)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jComboBoxEditora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jComboBoxAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9)))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxArea, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldSerie)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jYearChooserPublicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jButtonSalvar)
                                        .addGap(103, 103, 103)
                                        .addComponent(jLabel15)))
                                .addGap(0, 19, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel11))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBoxAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jComboBoxEditora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel13))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jYearChooserPublicacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel8)))
                .addGap(18, 34, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonExcluir)
                    .addComponent(jButtonAlterar)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonNovo)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonSalvar)
                        .addComponent(jLabel15)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        try {
            //    if (jTextFieldRegistro.getText().isEmpty()) {
            if (registro.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Campo vazio! Para excluir um livro é necessário informar o registro de um livro");
            } else {
                //mod.setRegistro(Integer.parseInt(jTextFieldRegistro.getText()));
                mod.setRegistro(Integer.parseInt(registro));
                controlLivro.consultarRegistro(mod);

                int reply = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir o livro selecionado?", "Confirmação de exclusão", JOptionPane.YES_NO_OPTION);
                if (reply == JOptionPane.YES_OPTION) {
                    if (mod.isContem() == true) {
                        controlLivro.excluirLivro(mod);
                        mod.setContem(false); // seta o valor para falso
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Registro nulo ou inválido. "
                                + "\n Por favor informe um registro válido para ser excluído");
                    }

                }
                preencherTabela("SELECT livro.registro as registro, livro.titulo as titulo,autor.nome as autor,editora.nome as editora, livro.serie as serie, area.nome as area, livro.volume, livro.ano_publicacao as publicacao \n"
                        + "FROM single.livro as livro\n"
                        + "inner  join single.area as area\n"
                        + "on area.codigo = livro.area\n"
                        + "inner join single.editora as editora\n"
                        + "on editora.codigo = livro.editora\n"
                        + "inner join single.autor as autor\n"
                        + "on autor.codigo = livro.autor\n"
                        + "order by livro.registro");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao excluir! \n ERRO:" + e);
        }

        jTextFieldTitulo.setText("");
        jTextFieldVolume.setText("");
        jTextFieldSerie.setText("");
        jTextFieldTitulo.setEnabled(false);
        jTextFieldVolume.setEnabled(false);
        jTextFieldSerie.setEnabled(false);
        jYearChooserPublicacao.setEnabled(false);
        jComboBoxArea.setEnabled(false);
        jComboBoxAutor.setEnabled(false);
        jComboBoxEditora.setEnabled(false);

        jButtonAlterar.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jButtonNovo.setEnabled(true);
        preencherTabela("SELECT livro.registro as registro, livro.titulo as titulo,autor.nome as autor,editora.nome as editora, livro.serie as serie, area.nome as area, livro.volume, livro.ano_publicacao as publicacao \n"
                + "FROM single.livro as livro\n"
                + "inner  join single.area as area\n"
                + "on area.codigo = livro.area\n"
                + "inner join single.editora as editora\n"
                + "on editora.codigo = livro.editora\n"
                + "inner join single.autor as autor\n"
                + "on autor.codigo = livro.autor\n"
                + "order by livro.registro");
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed

        try {
            //  if (jTextFieldRegistro.getText().isEmpty()) {
            if (registro.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Campo vazio! Para alterar um registro é necessário informar um número de registro");
            } else {
                mod.setRegistro(Integer.parseInt(registro));
                controlLivro.consultarRegistro(mod);
                if (mod.isContem() == true) {
                    int editora, autor, area;
                    conectaEditora.executaSQL("SELECT * FROM single.editora "
                            + "where nome = '" + jComboBoxEditora.getSelectedItem() + "'");
                    conectaEditora.rs.first();
                    editora = conectaEditora.rs.getInt("codigo");

                    conectaAutor.executaSQL("SELECT * FROM single.autor "
                            + "where nome = '" + jComboBoxAutor.getSelectedItem() + "'");
                    conectaAutor.rs.first();
                    autor = conectaAutor.rs.getInt("codigo");

                    conectaArea.executaSQL("SELECT * FROM single.area "
                            + "where nome = '" + jComboBoxArea.getSelectedItem() + "'");
                    conectaArea.rs.first();
                    area = conectaArea.rs.getInt("codigo");

                    mod.setRegistro(Integer.parseInt(registro));
                    mod.setArea(area);
                    mod.setAutor(autor);
                    mod.setEditora(editora);
                    mod.setTitulo(jTextFieldTitulo.getText());
                    mod.setAno_publicacao(jYearChooserPublicacao.getValue());
                    mod.setVolume(Integer.parseInt(jTextFieldVolume.getText()));
                    mod.setSerie(jTextFieldSerie.getText());

                    int reply = JOptionPane.showConfirmDialog(null, "Deseja realmente alterar o livro selecionado?", "Confirmação de alteração", JOptionPane.YES_NO_OPTION);
                    if (reply == JOptionPane.YES_OPTION) {
                        controlLivro.alteraLivro(mod);
                        //preencherTabela("select * from single.area order by codigo");
                        mod.setContem(false); // seta o valor para falso
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Registro nulo ou inválido. "
                            + "\n Por favor informe um registro válido para ser alterado");
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao alterar! \n ERRO:" + ex);
        }
        jTextFieldTitulo.setText("");
        jTextFieldSerie.setText("");
        jTextFieldVolume.setText("");
        jButtonAlterar.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jButtonNovo.setEnabled(true);
        preencherTabela("SELECT livro.registro as registro, livro.titulo as titulo,autor.nome as autor,editora.nome as editora, livro.serie as serie, area.nome as area, livro.volume, livro.ano_publicacao as publicacao \n"
                + "FROM single.livro as livro\n"
                + "inner  join single.area as area\n"
                + "on area.codigo = livro.area\n"
                + "inner join single.editora as editora\n"
                + "on editora.codigo = livro.editora\n"
                + "inner join single.autor as autor\n"
                + "on autor.codigo = livro.autor\n"
                + "order by livro.registro");
    }//GEN-LAST:event_jButtonAlterarActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        jTextFieldTitulo.setText("");
        jTextFieldVolume.setText("");
        jTextFieldSerie.setText("");
        jTextFieldTitulo.setEnabled(true);
        jTextFieldVolume.setEnabled(true);
        jTextFieldSerie.setEnabled(true);
        jYearChooserPublicacao.setEnabled(true);
        jComboBoxArea.setEnabled(true);
        jComboBoxAutor.setEnabled(true);
        jComboBoxEditora.setEnabled(true);

        jButtonAlterar.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jButtonSalvar.setEnabled(true);
        jButtonNovo.setEnabled(false);
        jButtonCancelar.setEnabled(true);
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        
        try {

            if (registro.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Campo(s) vazios! "
                        + "\nPor favor verifique se todos os campos foram preenchidos corretamente");
            } else {

                int editora, autor, area;
                conectaEditora.executaSQL("SELECT * FROM single.editora "
                        + "where nome = '" + jComboBoxEditora.getSelectedItem() + "'");
                conectaEditora.rs.first();
                editora = conectaEditora.rs.getInt("codigo");

                conectaAutor.executaSQL("SELECT * FROM single.autor "
                        + "where nome = '" + jComboBoxAutor.getSelectedItem() + "'");
                conectaAutor.rs.first();
                autor = conectaAutor.rs.getInt("codigo");

                conectaArea.executaSQL("SELECT * FROM single.area "
                        + "where nome = '" + jComboBoxArea.getSelectedItem() + "'");
                conectaArea.rs.first();
                area = conectaArea.rs.getInt("codigo");
                // É enviado para objeto livro
                mod.setArea(area);
                mod.setAutor(autor);
                mod.setEditora(editora);
                mod.setTitulo(jTextFieldTitulo.getText());
                mod.setAno_publicacao(jYearChooserPublicacao.getValue());
                mod.setVolume(Integer.parseInt(jTextFieldVolume.getText()));
                mod.setSerie(jTextFieldSerie.getText());
                controlLivro.inserirLivro(mod);

                //LIMPA CAMPOS
                jTextFieldTitulo.setText("");
                jTextFieldSerie.setText("");
                jTextFieldVolume.setText("");
                jButtonAlterar.setEnabled(false);
                jButtonExcluir.setEnabled(false);
                jButtonSalvar.setEnabled(false);
                jButtonNovo.setEnabled(true);
                preencherTabela("SELECT livro.registro as registro, livro.titulo as titulo,autor.nome as autor,editora.nome as editora, livro.serie as serie, area.nome as area, livro.volume, livro.ano_publicacao as publicacao \n"
                        + "FROM single.livro as livro\n"
                        + "inner  join single.area as area\n"
                        + "on area.codigo = livro.area\n"
                        + "inner join single.editora as editora\n"
                        + "on editora.codigo = livro.editora\n"
                        + "inner join single.autor as autor\n"
                        + "on autor.codigo = livro.autor\n"
                        + "order by livro.registro");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro na inserção! \nPor favor verifique se o(s) "
                    + "campo(s) foram preenchidos corretamente"
                    + "  \n\n ERRO: " + ex);
        }
        preencherTabela("SELECT livro.registro as registro, livro.titulo as titulo,autor.nome as autor,editora.nome as editora, livro.serie as serie, area.nome as area, livro.volume, livro.ano_publicacao as publicacao \n"
                + "FROM single.livro as livro\n"
                + "inner  join single.area as area\n"
                + "on area.codigo = livro.area\n"
                + "inner join single.editora as editora\n"
                + "on editora.codigo = livro.editora\n"
                + "inner join single.autor as autor\n"
                + "on autor.codigo = livro.autor\n"
                + "order by livro.registro");
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        jTextFieldTitulo.setText("");
        jTextFieldVolume.setText("");
        jTextFieldSerie.setText("");
        jButtonAlterar.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jButtonNovo.setEnabled(true);
        jButtonCancelar.setEnabled(false);
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jTableLivroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLivroMouseClicked
        int linhaSelecionada = jTableLivro.getSelectedRow();
        registro = jTableLivro.getValueAt(linhaSelecionada, 0).toString();
        jTextFieldTitulo.setText(jTableLivro.getValueAt(linhaSelecionada, 1).toString());
        jComboBoxArea.setSelectedItem(jTableLivro.getValueAt(linhaSelecionada, 2).toString());
        jComboBoxAutor.setSelectedItem(jTableLivro.getValueAt(linhaSelecionada, 3).toString());
        jTextFieldSerie.setText(jTableLivro.getValueAt(linhaSelecionada, 4).toString());
        jTextFieldVolume.setText(jTableLivro.getValueAt(linhaSelecionada, 5).toString());
        jComboBoxEditora.setSelectedItem(jTableLivro.getValueAt(linhaSelecionada, 6).toString());
        jYearChooserPublicacao.setValue(Integer.parseInt(jTableLivro.getValueAt(linhaSelecionada, 7).toString()));

        // habilita os campos do formulario
        jTextFieldTitulo.setEnabled(true);
        jTextFieldVolume.setEnabled(true);
        jTextFieldSerie.setEnabled(true);
        jYearChooserPublicacao.setEnabled(true);
        jComboBoxArea.setEnabled(true);
        jComboBoxAutor.setEnabled(true);
        jComboBoxEditora.setEnabled(true);

        jButtonExcluir.setEnabled(true);
        jButtonAlterar.setEnabled(true);

    }//GEN-LAST:event_jTableLivroMouseClicked

    void atualizaCombobox() {
        conecta.conexao();
        conecta.executaSQL("SELECT * from single.area order by nome");

        try {
            conecta.rs.first();
            do {
                jComboBoxArea.addItem(conecta.rs.getString("nome"));
            } while (conecta.rs.next());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher combobox estado" + ex);
        }

        conecta.executaSQL("SELECT * from single.autor order by nome");
        try {
            conecta.rs.first();
            do {
                jComboBoxAutor.addItem(conecta.rs.getString("nome"));
            } while (conecta.rs.next());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher combobox estado" + ex);
        }

        conecta.executaSQL("SELECT * from single.editora order by nome");
        try {
            conecta.rs.first();
            do {
                jComboBoxEditora.addItem(conecta.rs.getString("nome"));
            } while (conecta.rs.next());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher combobox estado" + ex);
        }

    }

    public void preencherTabela(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Registro", "Título", "Área", "Autor", "Série", "Volume ", "Editora", "Publicação"};

        conecta.executaSQL(sql);
        try {
            conecta.rs.first();
            do {
                dados.add(new Object[]{conecta.rs.getString("registro"), conecta.rs.getString("titulo"), conecta.rs.getString("area"),
                    conecta.rs.getString("autor"), conecta.rs.getString("serie"),
                    conecta.rs.getString("volume"), conecta.rs.getString("editora"), conecta.rs.getString("publicacao")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao exibir tabela! \n ERRO:" + ex);
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTableLivro.setModel(modelo);
        jTableLivro.getColumnModel().getColumn(0).setPreferredWidth(60);
        jTableLivro.getColumnModel().getColumn(0).setResizable(false);
        jTableLivro.getColumnModel().getColumn(1).setPreferredWidth(270);
        jTableLivro.getColumnModel().getColumn(1).setResizable(false);
        jTableLivro.getColumnModel().getColumn(2).setPreferredWidth(110);
        jTableLivro.getColumnModel().getColumn(2).setResizable(false);
        jTableLivro.getColumnModel().getColumn(3).setPreferredWidth(150);
        jTableLivro.getColumnModel().getColumn(3).setResizable(false);
        jTableLivro.getColumnModel().getColumn(4).setPreferredWidth(65);
        jTableLivro.getColumnModel().getColumn(4).setResizable(false);
        jTableLivro.getColumnModel().getColumn(5).setPreferredWidth(60);
        jTableLivro.getColumnModel().getColumn(5).setResizable(false);
        jTableLivro.getColumnModel().getColumn(6).setPreferredWidth(50);
        jTableLivro.getColumnModel().getColumn(6).setResizable(false);
        jTableLivro.getColumnModel().getColumn(7).setPreferredWidth(75);
        jTableLivro.getColumnModel().getColumn(7).setResizable(false);
        jTableLivro.getTableHeader().setReorderingAllowed(false);
        jTableLivro.setAutoResizeMode(jTableLivro.AUTO_RESIZE_OFF);
        jTableLivro.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDLivro dialog = new JDLivro(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox jComboBoxArea;
    private javax.swing.JComboBox jComboBoxAutor;
    private javax.swing.JComboBox jComboBoxEditora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableLivro;
    private javax.swing.JTextField jTextFieldSerie;
    private javax.swing.JTextField jTextFieldTitulo;
    private javax.swing.JTextField jTextFieldVolume;
    private com.toedter.calendar.JYearChooser jYearChooserPublicacao;
    // End of variables declaration//GEN-END:variables
}
