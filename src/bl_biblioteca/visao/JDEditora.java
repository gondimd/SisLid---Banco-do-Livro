/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package bl_biblioteca.visao;

import bl_biblioteca.controle.ConectaBanco;
import bl_biblioteca.controle.ControleJtextFieldStrings;
import bl_biblioteca.controle.ControleEditora;
import bl_biblioteca.modelo.ModeloTabela;
import bl_biblioteca.modelo.ModeloEditora;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

public class JDEditora extends javax.swing.JDialog {

    ConectaBanco conecta = new ConectaBanco();
    ConectaBanco conectaLocal = new ConectaBanco();
    ModeloEditora mod = new ModeloEditora();
    ControleEditora controlEditora = new ControleEditora();
    
    public JDEditora(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        conecta.conexao();
        conectaLocal.conexao();
        conectaLocal.executaSQL("SELECT DISTINCT estado_sigla from single.local order by estado_sigla");
        jComboBoxLocal.removeAllItems();
        try {
            conectaLocal.rs.first();
            do {
                jComboBoxLocal.addItem(conectaLocal.rs.getString("estado_sigla"));
            } while (conectaLocal.rs.next());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher combobox estado" + ex);
        }
        //preencherTabela("SELECT * FROM single.editora order by codigo ");
        preencherTabela("SELECT editora.codigo, editora.nome, local.estado_sigla FROM single.editora editora inner join single.local local on local.codigo =  editora.local ");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldEditora = new ControleJtextFieldStrings(50);
        jButtonExcluir = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonNovo = new javax.swing.JButton();
        jButtonAlterar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEditora = new javax.swing.JTable();
        jButtonPrimeiro = new javax.swing.JButton();
        jButtonUltimo = new javax.swing.JButton();
        jButtonAnterior = new javax.swing.JButton();
        jButtonProximo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxLocal = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastrar Editora");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Nome:");

        jTextFieldEditora.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldEditora.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldEditora.setEnabled(false);
        jTextFieldEditora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEditoraActionPerformed(evt);
            }
        });

        jButtonExcluir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonExcluir.setText("Excluir");
        jButtonExcluir.setToolTipText("Excluir local");
        jButtonExcluir.setEnabled(false);
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonSalvar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonSalvar.setText("Salvar");
        jButtonSalvar.setToolTipText("Salvar local");
        jButtonSalvar.setEnabled(false);
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonNovo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonNovo.setText("Novo");
        jButtonNovo.setToolTipText("Novo Local");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jButtonAlterar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonAlterar.setText("Alterar");
        jButtonAlterar.setToolTipText("Alterar local");
        jButtonAlterar.setEnabled(false);
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });

        jTableEditora.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTableEditora.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableEditora);

        jButtonPrimeiro.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonPrimeiro.setText("<<");
        jButtonPrimeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrimeiroActionPerformed(evt);
            }
        });

        jButtonUltimo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonUltimo.setText("<");
        jButtonUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUltimoActionPerformed(evt);
            }
        });

        jButtonAnterior.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonAnterior.setText(">");
        jButtonAnterior.setEnabled(false);
        jButtonAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnteriorActionPerformed(evt);
            }
        });

        jButtonProximo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonProximo.setText(">>");
        jButtonProximo.setEnabled(false);
        jButtonProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProximoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Local:");

        jComboBoxLocal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBoxLocal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxLocalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jButtonExcluir)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAlterar)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonNovo)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSalvar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jButtonPrimeiro)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonUltimo)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonProximo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldEditora, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldEditora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonNovo)
                    .addComponent(jButtonAlterar)
                    .addComponent(jButtonExcluir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPrimeiro)
                    .addComponent(jButtonUltimo)
                    .addComponent(jButtonAnterior)
                    .addComponent(jButtonProximo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 418, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldEditoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEditoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEditoraActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        /*     try {
            if (jTextFieldEditora.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Campo vazio! Para excluir um registro é necessário informar a area");
            } else {
                int opcao = JOptionPane.showConfirmDialog(rootPane, "Você tem certeza que deseja excluir este registro?");
                if (opcao == 0) {
                    conecta.executaSQL("delete from single.editora where nome ='" + jTextFieldEditora.getText() + "'");
                    JOptionPane.showMessageDialog(rootPane, "Excluido com sucesso!");
                    preencherTabela("select * from single.editora order by codigo");
                }
            }
        } catch (Exception e) {

        }

        jTextFieldEditora.setText("");
        jTextFieldEditora.setEnabled(false);
        jButtonAlterar.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jButtonNovo.setEnabled(true);
        */
        try {
            if (jTextFieldEditora.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Campo vazio! Para excluir um registro é necessário informar uma editora");
            } else {
                mod.setNome(jTextFieldEditora.getText());
                controlEditora.excluirEditora(mod);
                //  preencherTabela("select * from single.editora order by codigo");
                preencherTabela("SELECT editora.codigo, editora.nome, local.estado_sigla FROM single.editora editora inner join single.local local on local.codigo =  editora.local ");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao excluir! \n ERRO:" + e);
        }
        jTextFieldEditora.setText("");
        jTextFieldEditora.setEnabled(false);
        jButtonAlterar.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jButtonNovo.setEnabled(true);
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        /*    try {
            if ((jTextFieldEditora.getText().isEmpty())) {
                JOptionPane.showMessageDialog(rootPane, "Campo(s) vazios!");
            } else {
                PreparedStatement pst = conecta.conn.prepareStatement("insert into single.editora (nome, local)values(?,?)");
                //pst.setString(numero do paramentro, nome do campo);
                pst.setString(1, jTextFieldEditora.getText());
                conectaLocal.executaSQL("SELECT * FROM single.local where estado_sigla = '" + jComboBoxLocal.getSelectedItem() + "'");
                conectaLocal.rs.first();
                pst.setInt(2, conectaLocal.rs.getInt("codigo"));
                pst.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Cadastro realizado com sucesso!");
                jComboBoxLocal.setEnabled(false);
                preencherTabela("select * from single.editora order by codigo");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro na inserção! \n ERRO:" + ex);
        }

        jTextFieldEditora.setText("");
        jTextFieldEditora.setEnabled(false);
        jButtonAlterar.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jButtonNovo.setEnabled(true);

        */
        try {
            if ((jTextFieldEditora.getText().isEmpty())) {
                JOptionPane.showMessageDialog(rootPane, "Campo(s) vazios!");
            } else {
                int local;
                conectaLocal.executaSQL("SELECT * FROM single.local where estado_sigla = '" + jComboBoxLocal.getSelectedItem() + "'");
                conectaLocal.rs.first();
                local = conectaLocal.rs.getInt("codigo");
                mod.setNome(jTextFieldEditora.getText());
                mod.setLocal(local);
                controlEditora.inserirEditora(mod);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro na inserção! \n ERRO:" + ex);
        }
        jTextFieldEditora.setText("");
        jTextFieldEditora.setEnabled(false);
        jButtonAlterar.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jButtonNovo.setEnabled(true);
        preencherTabela("SELECT editora.codigo, editora.nome, local.estado_sigla FROM single.editora editora inner join single.local local on local.codigo =  editora.local ");
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        jTextFieldEditora.setText("");
        jTextFieldEditora.setEnabled(true);
        jButtonAlterar.setEnabled(false);
        jButtonExcluir.setEnabled(true);
        jButtonSalvar.setEnabled(true);
        jButtonNovo.setEnabled(false);
        jComboBoxLocal.setEnabled(true);
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed
        /*   try {
            if (jTextFieldEditora.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Campo vazio! Informe o campo a ser alterado");

            } else {
                PreparedStatement pst = conecta.conn.prepareStatement("update single.editora set nome = ? where codigo = ? ");
                pst.setString(1, jTextFieldEditora.getText());
                pst.setInt(2, Integer.parseInt(conecta.rs.getString("codigo")));
                pst.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Alterado com sucesso!");
                conecta.executaSQL("select * from single.editora");
                conecta.rs.first();
                preencherTabela("select * from single.editora order by codigo");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao alterar! \n ERRO:" + ex);
        }
        */

        try {
            if (jTextFieldEditora.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Campo vazio! Para alterar um registro é necessário informar o nome de uma editora");
            } else {
                int codigo, local;// variavel armazena codigo da area que será alterada
                codigo = Integer.parseInt(conecta.rs.getString("codigo"));
                conectaLocal.executaSQL("SELECT * FROM single.local where estado_sigla = '" + jComboBoxLocal.getSelectedItem() + "'");
                conectaLocal.rs.first();
                local = conectaLocal.rs.getInt("codigo");
                mod.setNome(jTextFieldEditora.getText());
                mod.setLocal(local);
                mod.setCodigo(codigo);
                controlEditora.alteraEditora(mod);
                preencherTabela("SELECT editora.codigo, editora.nome, local.estado_sigla FROM single.editora editora inner join single.local local on local.codigo =  editora.local ");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao alterar! \n ERRO:" + e);
        }

        jTextFieldEditora.setText("");
        jButtonAlterar.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jButtonNovo.setEnabled(true);
    }//GEN-LAST:event_jButtonAlterarActionPerformed

    private void jButtonPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrimeiroActionPerformed
        jButtonAlterar.setEnabled(true);
        jButtonExcluir.setEnabled(true);
        jTextFieldEditora.setEnabled(true);
        jButtonProximo.setEnabled(true);
        jButtonAnterior.setEnabled(false);
        try {
            conecta.executaSQL("select * from single.editora");
            conecta.rs.first();
            jTextFieldEditora.setText(conecta.rs.getString("nome"));

            conectaLocal.executaSQL("SELECT * FROM single.local where codigo= '" + conecta.rs.getInt("local") + "'");
            conectaLocal.rs.first();
            jComboBoxLocal.setSelectedItem(conectaLocal.rs.getString("estado_sigla"));

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao exibir dados! \n ERRO:" + ex);
        }
    }//GEN-LAST:event_jButtonPrimeiroActionPerformed

    private void jButtonUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUltimoActionPerformed
        jButtonAlterar.setEnabled(true);
        jButtonExcluir.setEnabled(true);
        jTextFieldEditora.setEnabled(true);
        jButtonAnterior.setEnabled(true);
        jButtonAlterar.setEnabled(true);
        jButtonExcluir.setEnabled(true);
        jTextFieldEditora.setEnabled(true);
        jButtonAnterior.setEnabled(true);
        try {
            conecta.executaSQL("select * from single.editora");
            conecta.rs.last();
            jTextFieldEditora.setText(conecta.rs.getString("nome"));

            conectaLocal.executaSQL("SELECT * FROM single.local where codigo= '" + conecta.rs.getInt("local") + "'");
            conectaLocal.rs.last();
            jComboBoxLocal.setSelectedItem(conectaLocal.rs.getString("estado_sigla"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao exibir dados! \n ERRO:" + ex);
        }
    }//GEN-LAST:event_jButtonUltimoActionPerformed

    private void jButtonAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnteriorActionPerformed
        jButtonAlterar.setEnabled(true);
        jButtonExcluir.setEnabled(true);
        jTextFieldEditora.setEnabled(true);
        jButtonProximo.setEnabled(true);

        try {
            if (!conecta.rs.previous()) {
                jButtonAnterior.setEnabled(false);
                return;
            }
            jTextFieldEditora.setText(conecta.rs.getString("nome"));

            conectaLocal.executaSQL("SELECT * FROM single.local where codigo= '" + conecta.rs.getInt("local") + "'");
            conectaLocal.rs.first();
            jComboBoxLocal.setSelectedItem(conectaLocal.rs.getString("estado_sigla"));

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao exibir dados! \n ERRO:" + ex);
        }
    }//GEN-LAST:event_jButtonAnteriorActionPerformed

    private void jButtonProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProximoActionPerformed
        jButtonAlterar.setEnabled(true);
        jButtonExcluir.setEnabled(true);
        jTextFieldEditora.setEnabled(true);
        jButtonAnterior.setEnabled(true);

        try {
            if (!conecta.rs.next()) {
                jButtonProximo.setEnabled(false);
                return;
            }
            jTextFieldEditora.setText(conecta.rs.getString("nome"));

            conectaLocal.executaSQL("SELECT * FROM single.local where codigo= '" + conecta.rs.getInt("local") + "'");
            conectaLocal.rs.first();
            jComboBoxLocal.setSelectedItem(conectaLocal.rs.getString("estado_sigla"));

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao exibir dados! \n ERRO:" + ex);
        }
    }//GEN-LAST:event_jButtonProximoActionPerformed

    private void jComboBoxLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxLocalActionPerformed

    }//GEN-LAST:event_jComboBoxLocalActionPerformed

    public void preencherTabela(String sql) {
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]{"Código", "Editora", "Estado"};

        conecta.executaSQL(sql);
        
        try {
            conecta.rs.first();
            do {
                dados.add(new Object[]{conecta.rs.getInt("codigo"), conecta.rs.getString("nome"), conecta.rs.getString("estado_sigla")});
            } while (conecta.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao exibir tabela! \n ERRO:" + ex);
        }
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTableEditora.setModel(modelo);
        jTableEditora.getColumnModel().getColumn(0).setPreferredWidth(70);
        jTableEditora.getColumnModel().getColumn(0).setResizable(false);
        jTableEditora.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTableEditora.getColumnModel().getColumn(1).setResizable(false);
        jTableEditora.getColumnModel().getColumn(2).setPreferredWidth(130);
        jTableEditora.getColumnModel().getColumn(2).setResizable(false);
        jTableEditora.getTableHeader().setReorderingAllowed(false);
        jTableEditora.setAutoResizeMode(jTableEditora.AUTO_RESIZE_OFF);
        jTableEditora.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDEditora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDEditora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDEditora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDEditora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDEditora dialog = new JDEditora(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonAnterior;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonPrimeiro;
    private javax.swing.JButton jButtonProximo;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JButton jButtonUltimo;
    private javax.swing.JComboBox jComboBoxLocal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEditora;
    private javax.swing.JTextField jTextFieldEditora;
    // End of variables declaration//GEN-END:variables
}
